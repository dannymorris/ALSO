% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ALSO.R
\name{ALSO_RF}
\alias{ALSO_RF}
\title{Attribute-wise Learning for Scoring Outliers (ALSO) with Random Forest.}
\usage{
ALSO_RF(data, cross_validate = TRUE, n_folds = 5, scores_only = TRUE, ...)
}
\arguments{
\item{data}{a data.frame, tibble, or numeric matrix}

\item{cross_validate}{logical, if TRUE then use k-fold cross-validation for scoring}

\item{n_folds}{an integer specifying the number of folds if cross_validate = T.
Defaults to 5}

\item{scores_only}{logical, if TRUE return outlier scores only. If FALSE
return a list with additional output (see return)}

\item{...}{additional arguments passed to the modeling function}

\item{model_function}{a model function, e.g. lm (see details)}
}
\value{
If scores_only = TRUE, a numeric vector of outlier scores is returned.
If FALSE, return a list containing outlier scores, squared prediction errors,
adjusted feature RMSE (see details), and adjusted feature weights for scoring
(see details)
}
\description{
Attribute-wise Learning for Scoring Outliers (ALSO) with Random Forest.
}
\details{
ALSO_RF() uses random forests (from the ranger package) to compute a
number of regressors/classifiers equal to the number of columns in the input
dataset. Random forest models are chosen for this method due to their flexibility
(use for classification and regression) and robustness. Outlier scores for each
observation are determined by computing the aggregate errors from the individual
models.

Feature weights are critical in determining outlier scores. Features with high
RMSE are given less weight than features with lower RMSE. The adjusted feature
weights are found by subtracting the feature RMSE from 1.Feature RMSE values
greater than 1 are adjusted to 1, leading to an adjusted feature weight of 0
(no impact on scoring).
}
\examples{
also <- ALSO_RF(data = iris, scores_only = FALSE)#'
also$scores
also$squared_prediction_errors
also$adjusted_feature_weights

ALSO_RF(data = iris, num.trees = 100) # pass arguments from ranger::ranger()
}
\references{
see "Outlier Analysis" (C.C Aggarwal. Springer, 2017) section 7.7
}
