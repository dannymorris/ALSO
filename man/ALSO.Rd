% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ALSO.R
\name{ALSO}
\alias{ALSO}
\title{Attribute-wise Learning for Scoring Outliers (ALSO).}
\usage{
ALSO(data, model_function, cross_validate = TRUE, n_folds = 5,
  scores_only = TRUE, ...)
}
\arguments{
\item{data}{a data.frame, tibble, or numeric matrix}

\item{model_function}{a model function, e.g. lm (see details)}

\item{cross_validate}{logical, if TRUE then use k-fold cross-validation for scoring}

\item{n_folds}{an integer specifying the number of folds if cross_validate = T.
Defaults to 5}

\item{scores_only}{logical, if TRUE return outlier scores only. If FALSE
return a list with additional output (see return)}

\item{...}{additional arguments passed to the modeling function}
}
\value{
If scores_only = TRUE, a numeric vector of outlier scores is returned.
If FALSE, return a list containing outlier scores, squared prediction errors,
adjusted feature RMSE (see details), and adjusted feature weights for scoring
(see details)
}
\description{
Attribute-wise Learning for Scoring Outliers (ALSO).
}
\details{
The model_function argument takes a function as its input. For example,
either "lm" or lm will work to score using least squares regression. Third-party
packages containing the modeling function need to be installed and loaded via
library() or referenced (e.g. rpart::rpart).

Feature weights are critical in determining outlier scores. Features with high
RMSE are given less weight than features with lower RMSE. The adjusted feature
weights are found by subtracting the feature RMSE from 1.
Feature RMSE values greater than 1 are adjusted to 1, leading to an adjusted
feature weight of 0 (no impact on scoring).
}
\examples{
# OLS with cross validation for out of sample scoring
dtree_also <- ALSO(data = scale(state.x77), model_function = rpart::rpart,
cross_validate = TRUE, n_folds = 10, score_only = FALSE)

dtree_also$scores
dtree_also$squared_prediction_errors
dtree_also$feature_rmse
dtree_also$feature_weights
}
\references{
see "Outlier Analysis" (C.C Aggarwal. Springer, 2017) section 7.7
}
